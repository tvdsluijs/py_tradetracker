PY NS API
=========

|N\|Solid|

What is this repository for?
----------------------------

-  This python3 module is for easy usage of the the NS Train API

How do I get set up?
--------------------

-  Go To `Tradetracker WSDL
   SIte <https://affiliate.tradetracker.com/webService>`__
-  On the right side you will find your Klant-ID and Toegangssleutel
   (client ID and access key)
-  You will need these two keys (id and key)
-  Install this script with:

   -  pip3 py\_tradetracker --upgrade (or pip py\_nsapi --upgrade )
   -  or
   -  sudo -H pip3 py\_tradetracker --upgrade

-  ready to use it!

Repository & Pypi
-----------------

You can find the Repro at
`Bitbucket <https://bitbucket.org/tvdsluijs/py-tradetracker/>`__

and the install information on
`Pypi <https://pypi.python.org/pypi/py-tradetracker>`__

API's
-----

TradeTracker web services allow you to access a large number of
functions that are available in the affiliate software by providing
programmatic access to the data generated by the TradeTracker platform:

-  Retrieve account information
-  Retrieve campaign information
-  Retrieve transaction information
-  Generate advanced reports
-  Retrieve product feed data
-  Retrieve payment information
-  Retrieve promotion material

This python does all the work for you and returns the data in a
Dictionary. You can loop through the Dict as any Dict.

You start withs

.. code:: python3

    from py_tradetracker import

    clientid = [your client ID]
    secretkey = [your secret key]
    sandbox = "true"
    locale = "nl_NL"
    demo = "false"

See examples about how to get information.

All api's can write warnings, errors and debug information to log files

Just use

.. code:: python3

    import logging
    logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.DEBUG)

More information about
`logging <https://docs.python.org/3/howto/logging.html>`__

Affiliates
~~~~~~~~~~

Start with connection

.. code:: python3

    a = Affiliates(None, clientid, secretkey, sandbox, locale, demo)

getAffiliateSites
^^^^^^^^^^^^^^^^^

Returns a list of affiliate sites associated to your account.

**Parameters**

options *type array
`AffiliateSiteFilter <https://affiliate.tradetracker.com/webService/index/type/AffiliateSiteFilter>`__*

**Return values**

`AffiliateSite <https://affiliate.tradetracker.com/webService/index/type/AffiliateSites>`__
*type DICT*

.. code:: python3

    data = a.getAffiliateSites()

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getAffiliateSites>`__

getAffiliateSiteTypes
^^^^^^^^^^^^^^^^^^^^^

Returns a list of all affiliate site types that are being used.
**Parameters**

NONE

**Return values**

`AffiliateSiteTypes <https://affiliate.tradetracker.com/webService/index/type/AffiliateSiteTypes>`__
*type DICT*

.. code:: python3

    data = a.getAffiliateSiteCategories()

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getAffiliateSiteTypes>`__

getAffiliateSiteCategories
^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns a list of campaigns available for the supplied affiliate site.
**Parameters**

NONE

**Return values**

`AffiliateSiteCategories <https://affiliate.tradetracker.com/webService/index/type/CampaignCategories>`__
*type DICT*

.. code:: python3

    data = a.getAffiliateSiteTypes()

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getAffiliateSiteCategories>`__

Campaigns
~~~~~~~~~

start with connection

.. code:: python3

    c = Campaigns(None, clientid, secretkey, sandbox, locale, demo)

getCampaigns
^^^^^^^^^^^^

Returns a list of campaigns available for the supplied affiliate site.

**Parameters**

affiliateSiteID *type nonNegativeInteger*

options *type array
`CampaignFilter <https://affiliate.tradetracker.com/webService/index/type/CampaignFilter>`__*

**Return values**

`Campaigns <https://affiliate.tradetracker.com/webService/index/type/Campaigns>`__
*type dict*

.. code:: python3

    data = c.getCampaigns(affiliateSiteID, options)

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getCampaigns>`__

getCampaignCategories
^^^^^^^^^^^^^^^^^^^^^

Returns a list of all campaign categories that are being used.

**Parameters**

NONE

**Return values**

`CampaignCategories <https://affiliate.tradetracker.com/webService/index/type/CampaignCategories>`__
*type Dict*

.. code:: python3

    data = c.getCampaignCategories()

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getCampaignCategories>`__

getCampaignCommissionExtended
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Returns extended commission information for the supplied campaign. The
commission information for the various product groups is included.
**Parameters**

NONE

**Return values**

`CampaignCategories <https://affiliate.tradetracker.com/webService/index/type/CampaignCategories>`__
*type dict*

.. code:: python3

    data = c.getCampaignCommissionExtended

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getCampaignCommissionExtended>`__

changeCampaignSubscription
^^^^^^^^^^^^^^^^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = c.changeCampaignSubscription

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/changeCampaignSubscription>`__

getCampaignNewsItems
^^^^^^^^^^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = c.getCampaignNewsItems

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getCampaignNewsItems>`__

Material
~~~~~~~~

Start with connection

.. code:: python3

    m = Material(None, clientid, secretkey, sandbox, locale, demo)

getMaterialBannerDimensions
^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = m.getMaterialBannerDimensions

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getMaterialBannerDimensions>`__

getMaterialBannerImageItems
^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = m.getMaterialBannerImageItems

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getMaterialBannerImageItems>`__

getMaterialBannerFlashItems
^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = m.getMaterialBannerFlashItems

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getMaterialBannerFlashItems>`__

getMaterialTextItems
^^^^^^^^^^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = m.getMaterialTextItems

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getMaterialTextItems>`__

getMaterialHTMLItems
^^^^^^^^^^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = m.getMaterialHTMLItems

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getMaterialHTMLItems>`__

getMaterialIncentiveVoucherItems
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = m.getMaterialIncentiveVoucherItems

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getMaterialIncentiveVoucherItems>`__

getMaterialIncentiveOfferItems
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = m.getMaterialIncentiveOfferItems

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getMaterialIncentiveOfferItems>`__

Transactions
~~~~~~~~~~~~

Start with connection

.. code:: python3

    t = Transactions(None, clientid, secretkey, sandbox, locale, demo)

getClickTransactions
^^^^^^^^^^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = t.getClickTransactions

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getClickTransactions>`__

getConversionTransactions
^^^^^^^^^^^^^^^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = t.getConversionTransactions

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getConversionTransactions>`__

createConversionTransaction
^^^^^^^^^^^^^^^^^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = t.createConversionTransaction

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/createConversionTransaction>`__

Report
~~~~~~

Start with connection

.. code:: python3

    r = Report(None, clientid, secretkey, sandbox, locale, demo)

getReportAffiliateSite
^^^^^^^^^^^^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = r.getReportAffiliateSite

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getReportAffiliateSite>`__

getReportCampaign
^^^^^^^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = r.getReportCampaign

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getReportCampaign>`__

getReportReference
^^^^^^^^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = r.getReportReference

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getReportReference>`__

ProductsFromFeed
~~~~~~~~~~~~~~~~

.. code:: python3

    f = Feeds(None, clientid, secretkey, sandbox, locale, demo)

getFeeds
^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = f.getFeeds(affiliateSiteID, options)

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getFeeds>`__

getFeedProductCategories
^^^^^^^^^^^^^^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = f.getFeedProductCategories(affiliateSiteID, feedId)

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getFeedProductCategories>`__

getFeedProducts
^^^^^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = f.getFeedProducts(affiliateSiteID, options)

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getFeedProducts>`__

Payments
~~~~~~~~

Start with connection

.. code:: python3

    o = Other(None, clientid, secretkey, sandbox, locale, demo)

getPayments
^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = o.getPayments

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getPayments>`__

getAttributions
^^^^^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = o.getAttributions

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getAttributions>`__

getTouchpoints
^^^^^^^^^^^^^^

**Parameters**

**Return values**

.. code:: python3

    data = o.getTouchpoints

`More Info on this
item <https://affiliate.tradetracker.com/webService/index/method/getTouchpoints>`__

Who do I talk to?
-----------------

-  Theodorus van der Sluijs (friends call me Theo)
-  theodorus@vandersluijs.nl

License
-------

Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)

You are free to:
~~~~~~~~~~~~~~~~

-  Share — copy and redistribute the material in any medium or format
-  Adapt — remix, transform, and build upon the material

-The licensor cannot revoke these freedoms as long as you follow the
license terms.-

Under the following terms:
~~~~~~~~~~~~~~~~~~~~~~~~~~

-  Attribution — You must give appropriate credit, provide a link to the
   license, and indicate if changes were made. You may do so in any
   reasonable manner, but not in any way that suggests the licensor
   endorses you or your use.
-  NonCommercial — You may not use the material for commercial purposes.
-  ShareAlike — If you remix, transform, or build upon the material, you
   must distribute your contributions under the same license as the
   original.

.. |N\|Solid| image:: https://www.ns.nl/static/generic/2.19.0/images/nslogo.svg
   :target: https://www.ns.nl/reisinformatie/ns-api
